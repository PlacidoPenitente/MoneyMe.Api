// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyMe.Infrastructure.Database;

namespace MoneyMe.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MoneyMe.Domain.ApplicationAggregate.Loan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("MoneyMe.Domain.CustomerAggregate.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("MoneyMe.Domain.ProductAggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("MaximumDuration")
                        .HasColumnType("int");

                    b.Property<int>("MinimumDuration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rule")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a42f8f96-340f-40e7-aeb8-d6e946219f84"),
                            DateAdded = new DateTime(2022, 9, 2, 18, 43, 52, 158, DateTimeKind.Utc).AddTicks(6349),
                            DateModified = new DateTime(2022, 9, 2, 18, 43, 52, 158, DateTimeKind.Utc).AddTicks(6366),
                            InterestRate = 0m,
                            MaximumDuration = 5,
                            MinimumDuration = 1,
                            Name = "Product A",
                            Rule = "InterestFreeRule"
                        },
                        new
                        {
                            Id = new Guid("97638063-1911-4afa-9b62-4dbe94a0c7e3"),
                            DateAdded = new DateTime(2022, 9, 2, 18, 43, 52, 159, DateTimeKind.Utc).AddTicks(161),
                            DateModified = new DateTime(2022, 9, 2, 18, 43, 52, 159, DateTimeKind.Utc).AddTicks(165),
                            InterestRate = 0.0949m,
                            MaximumDuration = 9,
                            MinimumDuration = 6,
                            Name = "Product B",
                            Rule = "FirstTwoMonthsInterestFreeRule"
                        },
                        new
                        {
                            Id = new Guid("af224dce-e165-49c4-aa0b-decf373f7d4f"),
                            DateAdded = new DateTime(2022, 9, 2, 18, 43, 52, 159, DateTimeKind.Utc).AddTicks(281),
                            DateModified = new DateTime(2022, 9, 2, 18, 43, 52, 159, DateTimeKind.Utc).AddTicks(281),
                            InterestRate = 0.0949m,
                            MaximumDuration = 36,
                            MinimumDuration = 10,
                            Name = "Product C",
                            Rule = "NoInterestFreeRule"
                        });
                });

            modelBuilder.Entity("MoneyMe.Domain.QuoteAggregate.Quote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MonthlyPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("MoneyMe.Domain.ApplicationAggregate.Loan", b =>
                {
                    b.OwnsMany("MoneyMe.Domain.LoanAggregate.Payment", "MonthlyAmortization", b1 =>
                        {
                            b1.Property<Guid>("LoanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Interest")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<int>("Period")
                                .HasColumnType("int");

                            b1.Property<decimal>("Principal")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("LoanId", "Id");

                            b1.ToTable("Payment");

                            b1.WithOwner()
                                .HasForeignKey("LoanId");
                        });

                    b.Navigation("MonthlyAmortization");
                });

            modelBuilder.Entity("MoneyMe.Domain.ProductAggregate.Product", b =>
                {
                    b.OwnsMany("MoneyMe.Domain.ProductAggregate.Fee", "Fees", b1 =>
                        {
                            b1.Property<Guid>("ProductId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ProductId", "Id");

                            b1.ToTable("Fee");

                            b1.WithOwner()
                                .HasForeignKey("ProductId");
                        });

                    b.Navigation("Fees");
                });
#pragma warning restore 612, 618
        }
    }
}
